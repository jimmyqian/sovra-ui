---
- name: Setup Sovra UI Production Server
  hosts: production
  become: true
  vars_files:
    - vars.yml

  tasks:
    - name: Update apt cache
      apt:
        update_cache: true
        cache_valid_time: 3600

    - name: Upgrade all packages
      apt:
        upgrade: dist

    - name: Install required system packages
      apt:
        name:
          - curl
          - git
          - gnupg
          - ca-certificates
          - apache2-utils
          - nginx
          - certbot
          - python3-certbot-nginx
        state: present

    - name: Add NodeSource GPG key
      apt_key:
        url: https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key
        state: present

    - name: Add NodeSource repository
      apt_repository:
        repo: "deb https://deb.nodesource.com/node_20.x nodistro main"
        state: present
        filename: nodesource

    - name: Install Node.js
      apt:
        name: nodejs
        state: present
        update_cache: true

    - name: Install PM2 globally
      npm:
        name: pm2
        global: true
        state: present

    - name: Create application directory structure
      file:
        path: "{{ item }}"
        state: directory
        owner: "{{ deploy_user }}"
        group: "{{ deploy_user }}"
        mode: '0755'
      loop:
        - "{{ app_root }}"
        - "{{ app_root }}/releases"
        - "{{ app_root }}/shared"
        - "{{ app_root }}/shared/logs"

    - name: Create basic auth password file
      htpasswd:
        path: /etc/nginx/.htpasswd
        name: "{{ basic_auth_username }}"
        password: "{{ basic_auth_password }}"
        mode: '0640'
        owner: root
        group: www-data

    - name: Create Nginx configuration from template
      template:
        src: templates/nginx.conf.j2
        dest: "/etc/nginx/sites-available/{{ app_name }}"
        mode: '0644'
      notify: Test and reload nginx

    - name: Enable Nginx site
      file:
        src: "/etc/nginx/sites-available/{{ app_name }}"
        dest: "/etc/nginx/sites-enabled/{{ app_name }}"
        state: link
      notify: Test and reload nginx

    - name: Remove default Nginx site
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent
      notify: Test and reload nginx

    - name: Create deployment script
      template:
        src: templates/deploy.sh.j2
        dest: "{{ app_root }}/deploy.sh"
        mode: '0755'
        owner: "{{ deploy_user }}"
        group: "{{ deploy_user }}"

    - name: Ensure Nginx is started and enabled
      systemd:
        name: nginx
        state: started
        enabled: true

    - name: Check if SSL certificate exists
      stat:
        path: "/etc/letsencrypt/live/{{ domain_name }}/fullchain.pem"
      register: ssl_cert

    - name: Obtain SSL certificate with Certbot
      command: >
        certbot --nginx
        -d {{ domain_name }}
        {% if www_domain %}-d www.{{ domain_name }}{% endif %}
        --email {{ ssl_email }}
        --agree-tos
        --non-interactive
        --redirect
      when: not ssl_cert.stat.exists and obtain_ssl_cert

    - name: Set up Certbot auto-renewal
      cron:
        name: "Certbot renewal"
        minute: "0"
        hour: "0,12"
        job: "certbot renew --quiet --post-hook 'systemctl reload nginx'"

  handlers:
    - name: Test and reload nginx
      shell: nginx -t && systemctl reload nginx
